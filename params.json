{"name":"PHP Tag cloud","tagline":"A PHP tag cloud class","body":"# PHP Tag Cloud\r\n## v4.0.1\r\n\r\n[![Build Status](https://travis-ci.org/lotsofcode/tag-cloud.png?branch=master)](https://travis-ci.org/lotsofcode/tag-cloud)\r\n\r\n#### Basic usage\r\n\r\n```php\r\n$cloud = new TagCloud();\r\n$cloud->addTag(\"tag-cloud\");\r\n$cloud->addTag(\"programming\");\r\necho $cloud->render();\r\n```\r\n\r\n#### Convert a string\r\n\r\n```php\r\n$cloud->addString(\"This is a tag-cloud script, written by Del Harvey. I wrote this tag-cloud class because I just love writing code.\");\r\n```\r\n\r\n#### Adding multiple tags\r\n\r\n```php\r\n$cloud->addTags(array('tag-cloud','php','github'));\r\n```\r\n\r\n#### Removing a tag\r\n\r\n```php\r\n$cloud->setRemoveTag('github');\r\n```\r\n\r\n#### Removing multiple tags\r\n\r\n```php\r\n$cloud->setRemoveTags(array('del','harvey'));\r\n```\r\n\r\n#### More complex adding\r\n\r\n```php\r\n$cloud->addTag(array('tag' => 'php', 'url' => 'http://www.php.net', 'colour' => 1));\r\n$cloud->addTag(array('tag' => 'ajax', 'url' => 'http://www.php.net', 'colour' => 2));\r\n$cloud->addTag(array('tag' => 'css', 'url' => 'http://www.php.net', 'colour' => 3));\r\n```\r\n\r\n#### Set the minimum length required\r\n\r\n```php\r\n$cloud->setMinLength(3);\r\n```\r\n\r\n#### Limiting the output\r\n\r\n```php\r\n$cloud->setLimit(10);\r\n```\r\n\r\n#### Set the order\r\n\r\n```php\r\n$cloud->setOrder('colour','DESC');\r\n```\r\n\r\n#### Set a custom HTML output\r\n\r\n```php\r\n$cloud->setHtmlizeTagFunction(function($tag, $size) use ($baseUrl) {\r\n  $link = '<a href=\"'.$baseUrl.'/'.$tag['url'].'\">'.$tag['tag'].'</a>';\r\n  return \"<span class='tag size{$size} colour-{$tag['colour']}'>{$link}</span> \";\r\n});\r\n```\r\n\r\n#### Outputting the cloud (shown above)\r\n\r\n```php\r\necho $cloud->render();\r\n```\r\n\r\n#### Transliteration\r\n\r\nBy default, all accented characters will be converted into their non-accented equivalent,\r\nthis is to circumvent duplicate similar tags in the same cloud, to disable this functionality\r\nand display the UTF-8 characters you can do the following:\r\n\r\n```php\r\n$tagCloud->setOption('transliterate', false);\r\n```\r\n\r\nMore usages on in a prettier format can be found here: http://lotsofcode.github.com/tag-cloud\r\n\r\n## Tests\r\n\r\nTo run the unit test suite, first install the dependencies:\r\n\r\n```bash\r\ncurl -s https://getcomposer.org/installer | php\r\nphp composer.phar install\r\n```\r\n\r\nThen execute phpunit in the root directory\r\n\r\n```bash\r\n./vendor/bin/phpunit\r\n```\r\n\r\n## Submitting pull requests\r\n\r\nIndentation style, size and encoding should be followed as per .editorconfig settings.\r\n","google":"UA-3968273-1","note":"Don't delete this file! It's used internally to help with page regeneration."}